{"version":3,"sources":["Components/Footer/Footer.js","Components/Jokes/Jokes.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","rel","target","alt","title","Jokes","useState","page","setPage","jokeList","setJokeList","isError","setIsError","isLoading","setIsLoading","hasMoreJokes","setHasMoreJokes","useEffect","fetch","method","headers","Headers","Accept","then","res","json","response","results","length","catch","window","scroll","map","element","joke","id","disabled","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAGe,SAASA,IACpB,OACI,mCACK,cACD,sBAAMC,UAAU,OAAhB,oBACC,OACD,mBACIC,KAAK,qCACLC,IAAI,aACJC,OAAO,SACPC,IAAI,uBACJC,MAAM,uBALV,+B,MCLG,SAASC,IAAS,IAAD,EACNC,mBAAS,GADH,mBACvBC,EADuB,KACjBC,EADiB,OAEEF,mBAAS,IAFX,mBAEvBG,EAFuB,KAEbC,EAFa,OAGAJ,oBAAS,GAHT,mBAGvBK,EAHuB,KAGdC,EAHc,OAIIN,oBAAS,GAJb,mBAIvBO,EAJuB,KAIZC,EAJY,OAKUR,oBAAS,GALnB,mBAKvBS,EALuB,KAKTC,EALS,KA+C9B,OA3BAC,qBAAU,WACRH,GAAa,GACbI,MAAM,0CAAD,OAA2CX,GAAQ,CACtDY,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACnBC,OAAQ,uBAGTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLZ,GAAa,GACTY,GAAYA,EAASC,UACnBD,EAASC,QAAQC,OAAS,GAC5BlB,EAAY,GAAD,mBAAKD,GAAL,YAAkBiB,EAASC,WACtCX,GAAgB,IAEhBA,GAAgB,OAIrBa,OAAM,WACLf,GAAa,GACbF,GAAW,GACXkB,OAAOC,OAAO,EAAG,QAEpB,CAACxB,IAGF,sBAAKR,UAAU,aAAf,UACE,oBAAIA,UAAU,eAAd,mBAECY,EACC,8EAEA,qCACE,6BACGF,GACCA,EAASuB,KAAI,SAACC,GAAD,OACX,6BAAsBA,EAAQC,MAArBD,EAAQE,SAIvB,wBACEC,SAAUvB,IAAcE,EACxBhB,UAAU,YACVsC,QA1DY,WACpB7B,EAAQD,EAAO,IAsDT,SAlDFM,EACK,iCACGE,EAGL,kBAFE,+BAwDP,cAACjB,EAAD,OC3EN,IAYewC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3C,EAAD,MAEF4C,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.92fca084.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FooterStyles.css\";\n\nexport default function Footer() {\n    return (\n        <footer>\n            {\"Coded with \"}\n            <span className=\"love\">&#9829;</span>\n            {\" by \"}\n            <a\n                href=\"https://github.com/AbhishekJoshi07\"\n                rel=\"noreferrer\"\n                target=\"_blank\"\n                alt=\"about Abhishek Joshi\"\n                title=\"about Abhishek Joshi\"\n            >\n                Abhishek Joshi\n            </a>\n        </footer>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport \"./jokesStyles.css\";\r\n\r\nexport default function Jokes() {\r\n  const [page, setPage] = useState(1);\r\n  const [jokeList, setJokeList] = useState([]);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hasMoreJokes, setHasMoreJokes] = useState(false);\r\n\r\n  const loadMoreJokes = () => {\r\n    setPage(page + 1);\r\n  };\r\n\r\n  const getBtnText = () => {\r\n    if (isLoading) {\r\n      return \"Wait I'm Loading Jokes for you\";\r\n    } else if (!hasMoreJokes) {\r\n      return \"No More Jokes there !!!\";\r\n    }\r\n    return \"Load More Jokes\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(`https://icanhazdadjoke.com/search?page=${page}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/json\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setIsLoading(false);\r\n        if (response && response.results) {\r\n          if (response.results.length > 0) {\r\n            setJokeList([...jokeList, ...response.results]);\r\n            setHasMoreJokes(true);\r\n          } else {\r\n            setHasMoreJokes(false);\r\n          }\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setIsLoading(false);\r\n        setIsError(true);\r\n        window.scroll(0, 0);\r\n      });\r\n  }, [page]);\r\n\r\n  return (\r\n    <div className=\"jokes_page\">\r\n      <h2 className=\"page_heading\">Jokes</h2>\r\n\r\n      {isError ? (\r\n        <p>There is an Error!!! Please refresh the page.</p>\r\n      ) : (\r\n        <>\r\n          <ul>\r\n            {jokeList &&\r\n              jokeList.map((element) => (\r\n                <li key={element.id}>{element.joke}</li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            disabled={isLoading || !hasMoreJokes}\r\n            className=\"load_more\"\r\n            onClick={loadMoreJokes}\r\n          >\r\n            {getBtnText()}\r\n          </button>\r\n        </>\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Jokes from './Components/Jokes/Jokes';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Jokes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}